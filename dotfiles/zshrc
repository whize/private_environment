# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="wedisagree"
ZSH_THEME="bira"

# Example aliases
alias zshconfig="subl ~/.zshrc"
alias ohmyzsh="subl ~/.oh-my-zsh"
alias tmux="TERM=screen-256color-bce tmux"
alias memo="vim + ~/Documents/memo.md"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to disable command auto-correction.
# DISABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git github sublime docker web-search tmux colored-man mytodo)

[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && source ~/.autojump/etc/profile.d/autojump.sh

source $ZSH/oh-my-zsh.sh

# User configuration
## load user .zshrc configuration file

# historical backward/forward search with linehead string binded to ^P/^N
#
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\\ep" history-beginning-search-backward-end
bindkey "\\en" history-beginning-search-forward-end

## Command history configuration
#
HISTFILE=${HOME}/.zsh_history
HISTSIZE=50000
SAVEHIST=50000
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data

#
[ -f ${HOME}/.zshrc.mine ] && source ${HOME}/.zshrc.mine

if [ -f ~/.nodebrew/nodebrew ]; then
    export PATH=$HOME/.nodebrew/current/bin:$PATH
    nodebrew use v0.11.1
fi

if [ -d $/usr/local/var/rbenv ]; then
    export RBENV_ROOT=/usr/local/var/rbenv
    export PATH=$RBENV_ROOT/bin:$PATH
fi

if [ -d ~/.phpenv ]; then
    export PHPENV_ROOT=~/.phpenv
    export PATH=$PHPENV_ROOT/bin:$PATH
fi

export LESS='-iMR'
export LESSOPEN='| /usr/local/bin/src-hilite-lesspipe.sh %s'
export DOCKER_HOST=tcp://172.17.8.101:2375
export VIM_PATH='/usr/local/Cellar/vim/7.4.979/bin'
export PATH="$VIM_PATH:/usr/local/bin:/usr/local/sbin:$HOME/bin:$PATH"
export EDITOR=vim

if which rbenv > /dev/null; then eval "$(rbenv init - zsh)"; fi
if which phpenv > /dev/null; then eval "$(phpenv init - zsh)"; fi


[[ -e ~/.phpbrew/bashrc ]] && source ~/.phpbrew/bashrc ]]

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=ja_JP.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"


# token for github access
export HOMEBREW_GITHUB_API_TOKEN=

# diff 結果をカラフルに
if which colordiff > /dev/null; then alias diff='colordiff -u'; export LESS='-R'; fi

# hubコマンドオプションをgitコマンドでも使えるようにする
eval "$(hub alias -s)"


agent="$HOME/tmp/ssh-agent-$USER"
if [ -S "$SSH_AUTH_SOCK" ]; then
	case $SSH_AUTH_SOCK in
	/tmp/*/agent.[0-9]*)
		ln -snf "$SSH_AUTH_SOCK" $agent && export SSH_AUTH_SOCK=$agent
	esac
elif [ -S $agent ]; then
	export SSH_AUTH_SOCK=$agent
else
	echo "no ssh-agent"
fi

